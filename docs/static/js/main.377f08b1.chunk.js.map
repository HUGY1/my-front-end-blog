{"version":3,"sources":["views/header/header.js","views/article/detail.js","views/article/list.js","views/layout/layout.js","App.js","serviceWorker.js","index.js"],"names":["Header","state","current","handleClick","e","_this","setState","key","react_default","a","createElement","es_layout","className","menu","onClick","this","selectedKeys","mode","Item","NavLink","to","icon","type","Component","Detail","ArticleList","props","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","articleList","code","name","reg","RegExp","r","location","search","substr","match","unescape","getQuery","console","log","axios","post","client_id","client_secret","then","res","list","group","map","item","row","gutter","id","col","span","title","created_at","layout","HashRouter","header_header","Route","path","component","App","window","href","views_layout_layout","Boolean","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.377f08b1.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './header.css';\nimport { Layout, Menu, Icon } from 'antd'\nimport {\n    NavLink,\n} from \"react-router-dom\";\n\n\nclass Header extends Component {\n    state = {\n        current: 'mail',\n    }\n\n\n    handleClick = (e) => {\n        this.setState({\n            current: e.key,\n        });\n    }\n    render() {\n        return (\n            <Layout.Header className='g-header'>\n                <h1 className='m-title'>Welcome to my Blog</h1>\n                <Menu className='m-head'\n                    onClick={this.handleClick}\n                    selectedKeys={[this.state.current]}\n                    mode=\"horizontal\">\n                    <Menu.Item className='u-item' key=\"mail\"><NavLink to=\"/article/detail\"><Icon type=\"solution\" />我的文章</NavLink></Menu.Item>\n                    <Menu.Item className='u-item' key=\"app\"><NavLink to=\"/article/list\"><Icon type=\"appstore\" />心情</NavLink></Menu.Item>\n                    <Menu.Item className='u-item' key=\"alipay\"><NavLink to=\"/profile\"><Icon type=\"user\" />关于我</NavLink></Menu.Item>\n                </Menu>\n            </Layout.Header>\n\n\n        )\n    }\n\n}\n\nexport default Header","import React, { Component } from 'react';\n\n\nclass Detail extends Component {\n    render() {\n        return (\n            <div>文章详情页面</div>\n        )\n    }\n\n}\n\nexport default Detail","import React, { Component } from 'react';\nimport { Row, Col } from 'antd'\nimport './list.css'\nimport axios from 'axios'\nclass ArticleList extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            articleList: []\n        }\n\n        this.code = getQuery('code')\n        function getQuery(name) {\n            let reg = new RegExp(\"(^|&)\" + name + \"=([^&]*)(&|$)\", \"i\");\n            let r = props.location.search.substr(1).match(reg);\n            if (r !== null) return unescape(r[2]);\n            return null;\n        }\n    }\n\n    componentDidMount() {\n        let _this = this\n        console.log(_this.code)\n        axios.post('https://github.com/login/oauth/access_token', {\n            'client_id': '75269a7abb6d1982a49e',\n            'client_secret': '596001e772342f0bd84a8c9d0becc62df5be1aba',\n            'code': _this.code\n        }).then(res => {\n            console.log(res)\n        })\n    }\n\n   \n    render() {\n        function List(props) {\n            console.log(props)\n            let list = props.group.map(item => \n                <Row className='m-item' gutter={0} key={item.id}>\n                    <Col span={16} className='m-title'>\n                        {item.title}\n                    </Col>\n                    <Col span={8} className='m-date'>\n                        {item.created_at}\n                    </Col>\n                </Row>\n            )\n            return (\n                <div>\n                    {list}\n                </div>\n            )\n        }\n        return (\n            <List group={this.state.articleList} />\n        )\n    }\n\n}\n\nexport default ArticleList","import React, { Component } from 'react';\nimport { Layout } from 'antd'\nimport Header from '../header/header'\nimport { Route , HashRouter} from \"react-router-dom\";\nimport './layout.css'\n// 路由页面\nimport Detail from '../article/detail'\nimport ArticleList from '../article/list'\nclass layout extends Component {\n    render() {\n        return (\n            <HashRouter>\n                <Layout>\n                    <Header></Header>\n                    <Layout className='m-main'>\n                        <Route path=\"/article/detail\" component={Detail} />\n                        <Route path=\"/article/list\" component={ArticleList} />\n                    </Layout>\n\n                </Layout>\n            </HashRouter>\n\n        )\n    }\n\n}\n\nexport default layout","import React, { Component } from 'react'\nimport './App.css'\nimport Layout from './views/layout/layout'\nclass App extends Component {\n  componentDidMount() {\n    window.location.href = 'https://github.com/login/oauth/authorize?client_id=75269a7abb6d1982a49e&redirect_uri=https://hugy1.github.io/my-front-end-blog/#/article/list'\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Layout>\n\n        </Layout>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}